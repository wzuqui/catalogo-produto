trigger:
  - master

variables:
  vmImageName: ubuntu-latest
  buildConfiguration: Release

pool:
  vmImage: $(vmImageName)

stages:
  - stage: Buil
    jobs:
      - job: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: "build"
          - task: DotNetCoreCLI@2
            displayName: Tests
            inputs:
              command: "test"
              arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
              publishTestResults: true
          - task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
            displayName: Merge
            inputs:
              reports: "$(Agent.TempDirectory)/**/coverage.cobertura.xml"
              targetdir: "$(Pipeline.Workspace)/coverlet"
              reporttypes: "Cobertura"
              verbosity: "Verbose"
              filefilters: "-**/Migrations/*.cs"
          - task: PublishCodeCoverageResults@1
            displayName: CodeCoverage
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: "$(Pipeline.Workspace)/coverlet/Cobertura.xml"
  - stage: Release
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    jobs:
      - deployment:
        displayName: Release
        pool:
          vmImage: 'vs2017-win2016'
        environment: Release
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: dir $(Build.SourcesDirectory)
                - script: >
                    npm install &&
                    npx -p semantic-release
                    -p @semantic-release/git
                    -p semantic-release-ado
                    semantic-release
                  env: { GH_TOKEN: $(GitHubToken) }
                  displayName: 'Semantic release'
                - script: echo $(nextRelease)
                  displayName: 'Show next version'
